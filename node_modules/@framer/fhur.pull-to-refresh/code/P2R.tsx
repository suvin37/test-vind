import * as React from "react"
import { useState, useEffect, useLayoutEffect } from "react"
import {
    Frame,
    useCycle,
    addPropertyControls,
    ControlType,
    useAnimation,
    useMotionValue,
    motion,
} from "framer"

import { cubicBezier } from "./cubicBezier"

const easingFunction = cubicBezier(0, 0, 0.65, 1.05)

// Open Preview (CMD + P)
// API Reference: https://www.framer.com/api

const calcProgress = (
    height: number,
    startY: number | undefined,
    endY: number | undefined
): number => {
    if (!startY || !endY) {
        return 0
    }
    const delta = Math.min(Math.max(endY - startY, 1) / height, 1)

    return easingFunction(delta)
}

const calculateMargin = (progress: number, maxRefreshHeight: number) => {
    return `${progress * maxRefreshHeight}px`
}

interface Props {
    maxRefreshHeight: number
}

export const PullToRefresh: React.SFC<Props> = props => {
    const y = useMotionValue(0)

    useEffect(() => {
        y.onChange(v => {
            if (v < 0) {
                y.set(0)
            }
        })
    }, [])

    return (
        <div
            style={{
                width: "100%",
                height: "100%",
                backgroundColor: "yellow",
                position: "absolute",
            }}
        >
            <Frame
                drag="y"
                dragElastic={0.2}
                dragConstraints={{
                    top: 0,
                    bottom: 0,
                }}
                style={{
                    position: "relative",
                    backgroundColor: "gray",
                    width: "100%",
                    height: "100%",
                }}
                y={y}
            >
                {props.children}
            </Frame>
        </div>
    )
}

PullToRefresh.defaultProps = {
    maxRefreshHeight: 200,
}

addPropertyControls(PullToRefresh, {
    maxRefreshHeight: {
        type: ControlType.Number,
        min: 0,
        max: 1000,
        title: "Max Refresh Height",
        defaultValue: 200,
    },
})
